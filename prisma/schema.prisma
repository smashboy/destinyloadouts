generator client {
    provider        = "prisma-client-js"
    // output   = "./.prisma"
    previewFeatures = ["jsonProtocol"]
}

generator json {
    provider = "prisma-json-types-generator"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id                              String            @id @default(cuid())
    createdAt                       DateTime          @default(value: now())
    updatedAt                       DateTime          @updatedAt
    name                            String?
    bungieAccountId                 String            @unique
    bungieAccountDisplayName        String
    bungieAccountProfilePicturePath String
    loadoutsLiked                   LoadoutLike[]
    loadoutsSaved                   LoadoutBookmark[]
    loadouts                        Loadout[]
    followers                       UserFollower[]    @relation("following")
    following                       UserFollower[]    @relation("followers")
}

model UserFollower {
    createdAt       DateTime @default(value: now())
    updatedAt       DateTime @updatedAt
    following       User     @relation("following", fields: [followingUserId], references: [id])
    followingUserId String
    follower        User     @relation("followers", fields: [followerUserId], references: [id])
    followerUserId  String

    @@unique([followingUserId, followerUserId])
    @@index([followerUserId])
    @@index([followingUserId])
}

model Loadout {
    id            String            @id @default(cuid())
    createdAt     DateTime          @default(value: now())
    updatedAt     DateTime          @updatedAt
    status        LoadoutStatus     @default(DRAFT)
    name          String
    classType     DestinyClassType
    subclassType  DestinyDamageType
    tags          LoadoutTagLink[]
    description   Json?
    /// [LoadoutStatsPriority]
    statsPriority Json?
    /// [LoadoutDBItems]
    items         Json
    likes         LoadoutLike[]
    bookmarks     LoadoutBookmark[]
    author        User              @relation(fields: [authorId], references: [id])
    authorId      String

    @@index([authorId])
}

model LoadoutTagLink {
    tag       LoadoutTag
    loadout   Loadout    @relation(fields: [loadoutId], references: [id], onDelete: Cascade)
    loadoutId String

    @@unique([loadoutId, tag])
    @@index([loadoutId, tag])
}

model LoadoutLike {
    createdAt     DateTime @default(value: now())
    likedBy       User     @relation(fields: [likedByUserId], references: [id])
    likedByUserId String
    loadout       Loadout  @relation(fields: [loadoutId], references: [id], onDelete: Cascade)
    loadoutId     String

    @@unique([likedByUserId, loadoutId])
    @@index([loadoutId])
}

model LoadoutBookmark {
    createdAt     DateTime @default(value: now())
    savedBy       User     @relation(fields: [savedByUserId], references: [id])
    savedByUserId String
    loadout       Loadout  @relation(fields: [loadoutId], references: [id], onDelete: Cascade)
    loadoutId     String

    @@unique([savedByUserId, loadoutId])
    @@index([loadoutId])
}

enum LoadoutStatus {
    PUBLISHED
    DRAFT
}

enum DestinyClassType {
    HUNTER
    TITAN
    WARLOCK
}

enum DestinyDamageType {
    SOLAR
    ARC
    VOID
    STRAND
    STATIS
}

enum LoadoutTag {
    PVE
    PVP
    GAMBIT
    RAID
    CRUCIBLE
    DUNGEON
    VANGUARD
    TRIALS
    FASHION
}

model DestinyManifest {
    version                        String                          @unique
    latest                         Boolean                         @default(true)
    jsonWorldComponentContentPaths DestinyManifestTablesByLocale[]
}

model DestinyManifestTablesByLocale {
    locale          String
    tables          DestinyManifestTable[]
    manifest        DestinyManifest        @relation(fields: [manifestVersion], references: [version], onDelete: Cascade)
    manifestVersion String

    @@unique([locale, manifestVersion])
    @@index([manifestVersion])
}

model DestinyManifestTable {
    name            String
    components      DestinyManifestTableComponent[]
    locale          DestinyManifestTablesByLocale   @relation(fields: [localeName, manifestVersion], references: [locale, manifestVersion], onDelete: Cascade)
    localeName      String
    manifestVersion String

    @@unique([name, localeName, manifestVersion])
    @@index([localeName, manifestVersion])
}

model DestinyManifestTableComponent {
    hashId          String
    content         Json
    table           DestinyManifestTable @relation(fields: [tableName, localeName, manifestVersion], references: [name, localeName, manifestVersion], onDelete: Cascade)
    tableName       String
    localeName      String
    manifestVersion String

    @@unique([hashId, tableName, localeName, manifestVersion])
    @@index([tableName, localeName, manifestVersion])
}
